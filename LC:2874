class Solution {
public:
    long long maximumTripletValue(vector<int>& nums) {
        //STEP-1:: MAKE AN ARRAY OF PREFIX MAXIMUM
        int n=nums.size();
        vector<int>prefix_max(n,0);
        int pre_max=INT_MIN;
        for(int i=1;i<nums.size();i++){
            int prev=nums[i-1];
            int maxi=max(prev,pre_max);
            pre_max=maxi;
            prefix_max[i]=maxi;
        }
        //STEP-2:: MAKE AN ARRAY OF SUFFIX MAXIMUM
        vector<int>suffix_max(n,0);
        int next_max=INT_MIN;
        for(int i=n-2;i>=0;i--){
            int prev=nums[i+1];
            int maxi=max(prev,next_max);
            next_max=maxi;
            suffix_max[i]=maxi;
        }

        //STEP-3 : TRAVERSE in prefix maximum array
        long long ans = LLONG_MIN; 
        for (int i = 0; i < n; i++) {
            long long x = prefix_max[i]; // Ensure long long for safety
            long long y = nums[i];
            long long z = suffix_max[i];

            long long ll = x - y;
            long long h = ll * z; // Prevent integer overflow
            ans = max(ans, h);
        }

        return max(ans, 0LL);
        
        
    }
};
